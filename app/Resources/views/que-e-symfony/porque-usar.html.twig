{% extends '::layout.html.twig' %}

{% block stylesheets %}
    <link rel="stylesheet" href="{{ asset('bundles/app/css/sln.css') }}">
    {{ parent() }}
{% endblock %}
{% block bodytag %}<body id="p-6-2-2-1" class="what-is-symfony">{% endblock %}
{% block body %}
    <!--######## Slider portada ##########-->
    <div class="container">
        <div id="page-content">
            <div class="row">

                {# Barra lateral com os menus do grupo Que é Symfony #}
                {{ include(':sidebar-menu:_que-e.html.twig') }}

                {# Conteudo da página #}
                <div id="main" class="col-sm-9">
                    <ol class="breadcrumb">
                        <li><a href="{{ path('homepage') }}">Home</a></li>
                        <li><a href="{{ path('que-e-symfony') }}">O que é Symfony</a></li>
                        <li><a href="{{ path('5-minutos') }}">Symfony em 5 minutos</a></li>
                        <li class="active">Por que eu deveria usar um framework?</li>
                    </ol>
                    <h1 class="content_title">Por que eu deveria usar um framework?</h1>

                    <div class="page-intro">
                        <p>
                            Um framework não é absolutamente necessário: é "apenas" uma das ferramentas que estão
                            disponíveis para ajudá-lo a desenvolver melhor e mais rápido!
                            <br />
                            Melhor, porque um framework fornece a certeza de que você está desenvolvendo uma
                            aplicação que está em total conformidade com as regras de negócio, que está estruturada, e que
                            seja tanto de fácil manutenção quanto atualizável.
                            <br />
                            Mais rápido, porque ele permite aos desenvolvedores economizar tempo reutilizando módulos genéricos,
                            a fim de se concentrar em outras áreas. Sem, no entanto, nunca ficar amarrado ao próprio framework.
                        </p>
                    </div>

                    <div class="page-section">
                        <h2 class="title_09">Investir na tarefa, não na tecnologia</h2>
                        <p>
                            Este é o princípio básico de um framework: Não ter que reinventar a roda.
                            E acabar com previsões, tarefas de baixo valor agregado (por exemplo, o desenvolvimento
                            de componentes genéricos), a fim de concentrar totalmente nas regras de negócio.
                        </p>
                        <p>
                            Como exemplo, um framework irá salvar o programador de ter que passar 2 ou 3
                            dias criando um formulário de autenticação (que não é uma tarefa específica). O tempo
                            que é economizado pode ser dedicado à componentes mais específicos, bem como, aos testes
                            unitários correspondentes, proporcionando código de alta qualidade, sustentável e sólido.
                        </p>

                    </div>

                    <div class="page-section">
                        <h2 class="title_09">Atualização e manutenção garantida</h2>
                        <p>
                            A longo prazo, um framework garante a longevidade das suas aplicações.
                            Se uma equipe de desenvolvimento trabalhar como bem desejar, somente esta equipe, em particular,
                            será capaz de manter e atualizar a aplicação com facilidade. Esta é a forma que
                            um editor suporta uma solução proprietária.
                        </p>
                        <p>
                            Por outro lado, a estrutura que um framework proporciona à aplicação
                            torna possível evitar essa armadilha completamente e proporciona à qualquer desenvolvedor
                            - tendo ele participado de seu desenvolvimento ou não - a habilidade de facilmente
                            "adotar" uma aplicação, para mantê-la ao longo do tempo e atualizá-la de forma rápida e limpa,
                            sempre que necessário.
                        </p>
                        <p>
                            Neste sentido, um framework não é uma caixa preta! No caso do Symfony,
                            ainda é PHP... As aplicações que são desenvolvidas não estão limitadas ao
                            universo Symfony, e elas são
                            <a href="{{ path('6-razoes') }}">nativamente interoperáveis</a>
                            com qualquer outra biblioteca PHP, por exemplo.
                        </p>

                    </div>

                    <div class="box-secondary page-summary">
                        <div class="row">
                            <div class="col-md-3 page-illustration">
                                <img src="{{ asset('bundles/app/img/illustration_summary_page.gif') }}" alt="Contar nossa história" />
                            </div>

                            <div class="col-md-9">
                                <p>Um framework não é uma necessidade absoluta, mas mesmo assim é muito útil.</p>
                                <p>Um framework é uma promessa de qualidade, atualização e manutenção de aplicações a um custo menor.</p>
                                <p>Os aplicativos desenvolvidos usando um framework são interoperáveis ​​com os padrões de mercado.</p>

                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>
{% endblock %}